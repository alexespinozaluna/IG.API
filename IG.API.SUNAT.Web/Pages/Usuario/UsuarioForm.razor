@attribute [Authorize(Roles = "Admin")]
@using IG.API.SUNAT.Web.Pages.Combos
@using IG.API.SUNAT.Web.Pages.Genericos
<EditForm Model="UsuarioActual" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="CodSistemaUsuario">Código Usuario</label>
        <InputText id="CodSistemaUsuario" class="form-control" @bind-Value="UsuarioActual.CodSistemaUsuario" />
    </div>
    <div class="form-group">
        <label for="NomSistemaUsuario">Nombre Usuario</label>
        <InputText id="NomSistemaUsuario" class="form-control" @bind-Value="UsuarioActual.NomSistemaUsuario" />
    </div>
    <div class="form-group">
        <label for="PassUsuario">Password</label>
        <div class="input-group">
            <InputText id="PassUsuario" class="form-control" type="password" @bind-Value="UsuarioActual.PassUsuario" disabled="@(!isChangePass)" /> 
            <button type="button" class="btn btn-outline-secondary" @onclick="OpenPasswordDialog">...</button>
        </div>
    </div>
    <div class="form-group">
        <label for="EsAdministrador">Es Administrador</label>
        <InputCheckbox id="EsAdministrador" class="form-check-input" @bind-Value="UsuarioActual.EsAdministrador" />
    </div>
    <div class="form-group">
        <label for="Desactivado">Desactivado</label>
        <InputCheckbox id="Desactivado" class="form-check-input" @bind-Value="UsuarioActual.Desactivado" />
    </div>
    <div class="form-group">
        <label for="CambiarPass">Cambiar Password</label>
        <InputCheckbox id="CambiarPass" class="form-check-input" @bind-Value="UsuarioActual.CambiarPass" />
    </div>
    <div class="form-group">
        <label for="IdmaeEmpresa">Empresa</label>
        <EmpresaSelect TValue="int" SelectedValue="UsuarioActual.IdEmpresa" SelectedValueChanged="OnEmpresaSelectChanged" />
    </div>
    <div class="d-grid gap-2 d-md-flex justify-content-md-end">
        <button type="submit" class="btn btn-primary mt-3"><i class="bi bi-floppy2-fill"></i> @((isEditing ? "Guardar" : "Agregar"))</button>
        <button type="button" class="btn btn-danger mt-3" @onclick="Cancel"><i class="bi bi-x-square"> Cancelar</i></button>
    </div>

</EditForm>
<PasswordDialog @ref="passwordDialog" OnPasswordSet="HandlePasswordSet" />
@code {
    [Parameter] public SistemaUsuario UsuarioActual { get; set; } = new SistemaUsuario();
    [Parameter] public EventCallback<SistemaUsuario> OnValidSubmit { get; set; }
    // [Parameter] public EventCallback<bool> ChangePass { get; set; }
    [Parameter] public EventCallback OnCancel { get; set; }
    [Parameter] public bool isEditing { get; set; } = false;
    public bool isChangePass { get; set; } = false;
    [Parameter] public EventCallback<bool> ChangePass { get; set; }

    private PasswordDialog passwordDialog;
    private async Task HandleValidSubmit()
    {
        await OnValidSubmit.InvokeAsync(UsuarioActual);
    }

    private async Task Cancel()
    {
        await OnCancel.InvokeAsync();
    }
    // private async Task ChangePass(ChangeEventArgs e)
    // {
    //     isChangePass = (bool)e.Value;
    //     if (isChangePass)
    //     {
    //         isChangePass = true;
    //         UsuarioActual.PassUsuario = "";
    //     }
    // }
    private void OnEmpresaSelectChanged(int newValue)
    {
        UsuarioActual.IdEmpresa = newValue;
    }
    private async Task OnChangePassChanged(ChangeEventArgs e)  // <-- Agregado
    {
        isChangePass = (bool)e.Value;
        await ChangePass.InvokeAsync(isChangePass);
    }
    private void OpenPasswordDialog()
    {
        passwordDialog.OpenDialog();
    }
    private void HandlePasswordSet(string password)
    {
        UsuarioActual.PassUsuario = password;
    }

}
